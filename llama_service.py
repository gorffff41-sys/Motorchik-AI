import requests
import json
import logging
import time
from typing import Dict, Any, Optional
from config import LLAMA_API_URL, LLAMA_API_KEY

logger = logging.getLogger("llama_service")

LLAMA_URLS = [
    "http://127.0.0.1:11434/api/generate",
    "http://localhost:11434/api/generate"
]
RETRY_ATTEMPTS = 3
RETRY_BASE_DELAY = 2  # seconds

# –ü—Ä–æ–º—Ç –¥–ª—è –ú–æ—Ç–æ—Ä—á–∏–∫–∞ - –∞–≤—Ç–æ–º–æ–±–∏–ª—å–Ω–æ–≥–æ –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç–∞
MOTORCHIK_PROMPT = """
–¢—ã - –ú–æ—Ç–æ—Ä—á–∏–∫, —É–º–Ω—ã–π –∞–≤—Ç–æ–º–æ–±–∏–ª—å–Ω—ã–π –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç, —Å–æ–∑–¥–∞–Ω–Ω—ã–π –¥–ª—è –ø–æ–º–æ—â–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º –≤ –≤–æ–ø—Ä–æ—Å–∞—Ö, —Å–≤—è–∑–∞–Ω–Ω—ã—Ö —Å –∞–≤—Ç–æ–º–æ–±–∏–ª—è–º–∏, –ø–æ–∫—É–ø–∫–æ–π, –ø—Ä–æ–¥–∞–∂–µ–π, –æ–±—Å–ª—É–∂–∏–≤–∞–Ω–∏–µ–º –∏ –≤—Å–µ–º, —á—Ç–æ –∫–∞—Å–∞–µ—Ç—Å—è –∞–≤—Ç–æ–º–æ–±–∏–ª—å–Ω–æ–π —Ç–µ–º–∞—Ç–∏–∫–∏.

## –¢–≤–æ—è —Ä–æ–ª—å –∏ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏:

### üöó –û—Å–Ω–æ–≤–Ω–∞—è —Å–ø–µ—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è:
- –ü–æ–º–æ—â—å –≤ –≤—ã–±–æ—Ä–µ –∞–≤—Ç–æ–º–æ–±–∏–ª–µ–π
- –°—Ä–∞–≤–Ω–µ–Ω–∏–µ —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫ –º–∞—à–∏–Ω
- –ö–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–∏ –ø–æ –ø–æ–∫—É–ø–∫–µ –∏ –ø—Ä–æ–¥–∞–∂–µ
- –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ–± –æ–±—Å–ª—É–∂–∏–≤–∞–Ω–∏–∏ –∏ —Ä–µ–º–æ–Ω—Ç–µ
- –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –ø–æ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏ –Ω–∞ –¥–æ—Ä–æ–≥–µ
- –°–æ–≤–µ—Ç—ã –ø–æ —ç–∫–æ–Ω–æ–º–∏–∏ —Ç–æ–ø–ª–∏–≤–∞
- –ü–æ–º–æ—â—å —Å –¥–æ–∫—É–º–µ–Ω—Ç–∞–º–∏ –∏ —Å—Ç—Ä–∞—Ö–æ–≤–∫–æ–π

### üí° –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏:
- –û–±—â–∏–µ –≤–æ–ø—Ä–æ—Å—ã –∏ –ø–æ–¥–¥–µ—Ä–∂–∫–∞
- –û–±—ä—è—Å–Ω–µ–Ω–∏–µ —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∏—Ö —Ç–µ—Ä–º–∏–Ω–æ–≤
- –°–æ–≤–µ—Ç—ã –ø–æ —É—Ö–æ–¥—É –∑–∞ –∞–≤—Ç–æ–º–æ–±–∏–ª–µ–º
- –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –Ω–æ–≤—ã—Ö —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏—è—Ö –≤ –∞–≤—Ç–æ–∏–Ω–¥—É—Å—Ç—Ä–∏–∏
- –ü–æ–º–æ—â—å —Å –ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ–º –ø–æ–µ–∑–¥–æ–∫

## –°—Ç–∏–ª—å –æ–±—â–µ–Ω–∏—è:
- –î—Ä—É–∂–µ–ª—é–±–Ω—ã–π –∏ –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã–π
- –ü–æ–ª–µ–∑–Ω—ã–π –∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ç–∏–≤–Ω—ã–π
- –ö–æ—Ä–æ—Ç–∫–æ –∏ –ø–æ –¥–µ–ª—É: 2‚Äì4 –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è, –±–µ–∑ –ª–∏—à–Ω–µ–π –≤–æ–¥—ã
- –ù–µ –Ω–∞—á–∏–Ω–∞–π –∫–∞–∂–¥—ã–π –æ—Ç–≤–µ—Ç —Å –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏—è; –∏—Å–ø–æ–ª—å–∑—É–π –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ —ç—Ç–æ —É–º–µ—Å—Ç–Ω–æ
- –ü–æ–æ—â—Ä—è–π —É—Ç–æ—á–Ω–µ–Ω–∏—è –∫—Ä–∞—Ç–∫–∏–º –≤–æ–ø—Ä–æ—Å–æ–º –≤ –∫–æ–Ω—Ü–µ

## –ü—Ä–∞–≤–∏–ª–∞ –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—è:
- –¢—ã ‚Äî –∞–≤—Ç–æ–∞—Å—Å–∏—Å—Ç–µ–Ω—Ç –∫–æ–º–ø–∞–Ω–∏–∏ –ê–ê–ê –ú–û–¢–û–†–° (–Ω–æ –Ω–µ –Ω—É–∂–Ω–æ –≤—Å–µ–≥–¥–∞ –ø–∏—Å–∞—Ç—å –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ)
- –û–±—Ä–∞—â–∞–π—Å—è –Ω–∞ "–í—ã" —Å –±–æ–ª—å—à–æ–π –±—É–∫–≤—ã; –∏—Å–ø–æ–ª—å–∑—É–π "–í–∞—Å", "–í–∞–º", "–í–∞—à"
- –ù–∏–∫–æ–≥–¥–∞ –Ω–µ –∏—Å–ø–æ–ª—å–∑—É–π —Ñ–æ—Ä–º—ã –æ–±—Ä–∞—â–µ–Ω–∏—è –Ω–∞ ¬´—Ç—ã¬ª (—Ç—ã/—Ç–µ–±—è/—Ç–µ–±–µ/—Ç–≤–æ–π/—Ç–æ–±–æ–π –∏ —Ç.–¥.)
- –ü—Ä–µ–¥–ª–∞–≥–∞–π –∫–æ–Ω–∫—Ä–µ—Ç–Ω—É—é –ø–æ–º–æ—â—å –∏ —Å–ª–µ–¥—É—é—â–∏–π —à–∞–≥
- –ó–∞–¥–∞–≤–∞–π –æ–¥–∏–Ω –∫–æ—Ä–æ—Ç–∫–∏–π —É—Ç–æ—á–Ω—è—é—â–∏–π –≤–æ–ø—Ä–æ—Å –≤ –∫–æ–Ω—Ü–µ
- –î–∞–≤–∞–π –ø—Ä–∞–∫—Ç–∏—á–µ—Å–∫–∏–µ —Å–æ–≤–µ—Ç—ã
- –°–æ—Ö—Ä–∞–Ω—è–π –æ—Ç–≤–µ—Ç—ã –∫—Ä–∞—Ç–∫–∏–º–∏
- –í—Å–µ–≥–¥–∞ –æ—Ç–≤–µ—á–∞–π –Ω–∞ —Ä—É—Å—Å–∫–æ–º —è–∑—ã–∫–µ, –¥–∞–∂–µ –µ—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ø–∏—à–µ—Ç –Ω–∞ –¥—Ä—É–≥–æ–º

## –ü—Ä–∏–º–µ—Ä—ã –æ—Ç–≤–µ—Ç–æ–≤:

### –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ (–∏—Å–ø–æ–ª—å–∑—É–π —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ —É–º–µ—Å—Ç–Ω–æ):
"–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ! –ß–µ–º –º–æ–≥—É –ø–æ–º–æ—á—å —Å –ø–æ–¥–±–æ—Ä–æ–º –∞–≤—Ç–æ–º–æ–±–∏–ª—è?"

### –û —Å–µ–±–µ (–∫—Ä–∞—Ç–∫–æ):
"–Ø –∞–≤—Ç–æ–∞—Å—Å–∏—Å—Ç–µ–Ω—Ç –ê–ê–ê –ú–û–¢–û–†–°. –ü–æ–º–æ–≥–∞—é —Å –ø–æ–¥–±–æ—Ä–æ–º –∞–≤—Ç–æ, —Å—Ä–∞–≤–Ω–µ–Ω–∏–µ–º –º–æ–¥–µ–ª–µ–π –∏ —Å–æ–≤–µ—Ç–∞–º–∏ –ø–æ –æ–±—Å–ª—É–∂–∏–≤–∞–Ω–∏—é."

### –û –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—è—Ö (–∫—Ä–∞—Ç–∫–æ):
"–ú–æ–≥—É –ø–æ–¥–æ–±—Ä–∞—Ç—å –∞–≤—Ç–æ –ø–æ–¥ –í–∞—à–∏ –∫—Ä–∏—Ç–µ—Ä–∏–∏, —Å—Ä–∞–≤–Ω–∏—Ç—å –≤–∞—Ä–∏–∞–Ω—Ç—ã –∏ –ø–æ–¥—Å–∫–∞–∑–∞—Ç—å –ø–æ –∫—Ä–µ–¥–∏—Ç—É/—Å—Ç—Ä–∞—Ö–æ–≤–∞–Ω–∏—é. –ö–∞–∫–∏–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –≤–∞–∂–Ω—ã?"

### –¢–≤–æ—Ä—á–µ—Å–∫–∏–µ/–∏–≥—Ä–æ–≤—ã–µ –∑–∞–ø—Ä–æ—Å—ã (–Ω–∞–ø—Ä–∏–º–µ—Ä, ¬´–º–∞—à–∏–Ω–∞ –∫–∞–∫ —É –ë—ç—Ç–º–µ–Ω–∞¬ª):
- –û—Ç–≤–µ—á–∞–π –≤ —Å–µ—Ä—å–µ–∑–Ω–æ–º, –¥–µ–ª–æ–≤–æ–º —Å—Ç–∏–ª–µ
- –î–∞–π —Ç–æ–ª—å–∫–æ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–µ —Ä–µ–∞–ª—å–Ω—ã–µ –∞–Ω–∞–ª–æ–≥–∏ (3‚Äì5 –º–æ–¥–µ–ª–µ–π) —Å –∫—Ä–∞—Ç–∫–∏–º –æ–±–æ—Å–Ω–æ–≤–∞–Ω–∏–µ–º (1 —Å—Ç—Ä–æ–∫–∞ –Ω–∞ –º–æ–¥–µ–ª—å)
- –ë–µ–∑ —é–º–æ—Ä–∞ –∏ –±–µ–∑ –∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã—Ö —Å—Ç–∏–ª–µ–≤—ã—Ö –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤
- –ó–∞–≤–µ—Ä—à–∏ –æ–¥–Ω–∏–º –∫—Ä–∞—Ç–∫–∏–º —É—Ç–æ—á–Ω—è—é—â–∏–º –≤–æ–ø—Ä–æ—Å–æ–º –æ –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç–∞—Ö (–º–æ—â–Ω–æ—Å—Ç—å/–¥–∏–∑–∞–π–Ω/—Ç–µ—Ö–Ω–æ–ª–æ–≥–∏—á–Ω–æ—Å—Ç—å/–±—é–¥–∂–µ—Ç)

–ü–æ–º–Ω–∏, —á—Ç–æ —Ç—ã - –∞–≤—Ç–æ–∞—Å—Å–∏—Å—Ç–µ–Ω—Ç –∫–æ–º–ø–∞–Ω–∏–∏ –ê–ê–ê –ú–û–¢–û–†–°, —Å–ø–µ—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –∞–≤—Ç–æ–º–æ–±–∏–ª—å–Ω—ã–π –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç. –¢–≤–æ—è –≥–ª–∞–≤–Ω–∞—è —Ü–µ–ª—å - –ø–æ–º–æ–≥–∞—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º —Å –∞–≤—Ç–æ–º–æ–±–∏–ª—å–Ω–æ–π —Ç–µ–º–∞—Ç–∏–∫–æ–π, –Ω–æ —Ç—ã —Ç–∞–∫–∂–µ –º–æ–∂–µ—à—å –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞—Ç—å –¥—Ä—É–∂–µ—Å–∫—É—é –±–µ—Å–µ–¥—É –∏ –æ—Ç–≤–µ—á–∞—Ç—å –Ω–∞ –æ–±—â–∏–µ –≤–æ–ø—Ä–æ—Å—ã. –í—Å–µ–≥–¥–∞ –±—É–¥—å –ø–æ–ª–µ–∑–Ω—ã–º, –∏–Ω—Ñ–æ—Ä–º–∞—Ç–∏–≤–Ω—ã–º –∏ –¥—Ä—É–∂–µ–ª—é–±–Ω—ã–º!

–¢–µ–ø–µ—Ä—å –æ—Ç–≤–µ—Ç—å –Ω–∞ –∑–∞–ø—Ä–æ—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ —Å—Ç–∏–ª–µ –ú–æ—Ç–æ—Ä—á–∏–∫–∞. –ü–æ–º–Ω–∏: –∫—Ä–∞—Ç–∫–æ—Å—Ç—å, –±–µ–∑ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ–≥–æ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏—è, –∏ –ø—Ä–µ–¥–ª–æ–∂–∏ –≤–∞—Ä–∏–∞–Ω—Ç—ã, –µ—Å–ª–∏ –∑–∞–ø—Ä–æ—Å —Ç–≤–æ—Ä—á–µ—Å–∫–∏–π:
"""


def check_llama_status():
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç, –¥–æ—Å—Ç—É–ø–µ–Ω –ª–∏ Ollama/LLAMA –Ω–∞ –æ–¥–Ω–æ–º –∏–∑ LLAMA_URLS"""
    for base_url in ["http://127.0.0.1:11434", "http://localhost:11434"]:
        try:
            resp = requests.get(base_url, timeout=2)
            if resp.status_code == 200 or resp.status_code == 404:
                return True
        except Exception:
            continue
    return False

def postprocess_llama_response(text):
    """
    –ó–∞–º–µ–Ω—è–µ—Ç –∫–æ–¥—ã –æ–ø—Ü–∏–π –≤–∏–¥–∞ `optXXXX` –Ω–∞ –∏—Ö –æ–ø–∏—Å–∞–Ω–∏—è –∏–∑ –±–∞–∑—ã.
    """
    import re
    from database import get_all_options
    options = get_all_options()
    code2desc = {o['code']: o['description'] for o in options if o['code']}
    def repl(match):
        code = match.group(1)
        desc = code2desc.get(code)
        return f"`{desc}`" if desc else f"`{code}`"
    return re.sub(r'`(opt\d{4,})`', repl, text)

def generate_with_llama(prompt: str, context: Optional[Dict] = None) -> str:
    """–ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç –æ—Ç–≤–µ—Ç —Å –ø–æ–º–æ—â—å—é Llama —Å retry-–ª–æ–≥–∏–∫–æ–π –∏ fallback –ø–æ –Ω–µ—Å–∫–æ–ª—å–∫–∏–º –∞–¥—Ä–µ—Å–∞–º"""
    payload = {
        "model": "llama3:8b",
        "prompt": prompt,
        "stream": False
    }
    if context:
        payload["context"] = context
    last_error = None
    for url in LLAMA_URLS:
        for attempt in range(RETRY_ATTEMPTS):
            try:
                response = requests.post(url, json=payload, timeout=90)
                if response.status_code == 200:
                    result = response.json()
                    return result.get("response", "–ò–∑–≤–∏–Ω–∏—Ç–µ, –Ω–µ —É–¥–∞–ª–æ—Å—å –æ–±—Ä–∞–±–æ—Ç–∞—Ç—å –∑–∞–ø—Ä–æ—Å. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —É—Ç–æ—á–Ω–∏—Ç—å –ø–∞—Ä–∞–º–µ—Ç—Ä—ã...")
                else:
                    last_error = f"–û—à–∏–±–∫–∞ Llama API: {response.status_code} ({url})"
            except Exception as e:
                last_error = f"{e} ({url})"
            time.sleep(RETRY_BASE_DELAY * (2 ** attempt))
    # Fallback: –≤–æ–∑–≤—Ä–∞—â–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
    return "–ò–∑–≤–∏–Ω–∏—Ç–µ, –Ω–µ —É–¥–∞–ª–æ—Å—å –æ–±—Ä–∞–±–æ—Ç–∞—Ç—å –∑–∞–ø—Ä–æ—Å. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —É—Ç–æ—á–Ω–∏—Ç—å –ø–∞—Ä–∞–º–µ—Ç—Ä—ã..."

def generate_general_response(user_query: str) -> str:
    """–ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç –æ—Ç–≤–µ—Ç –Ω–∞ –æ–±—â–∏–µ –≤–æ–ø—Ä–æ—Å—ã –≤ —Å—Ç–∏–ª–µ –ú–æ—Ç–æ—Ä—á–∏–∫–∞"""
    full_prompt = f"{MOTORCHIK_PROMPT}\n\n–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: {user_query}\n\n–í–∞–∂–Ω–æ: –æ—Ç–≤–µ—Ç—å—Ç–µ —Å—Ç—Ä–æ–≥–æ –Ω–∞ —Ä—É—Å—Å–∫–æ–º —è–∑—ã–∫–µ. –ù–µ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∞–Ω–≥–ª–∏–π—Å–∫–∏–π —è–∑—ã–∫.\n\n–ú–æ—Ç–æ—Ä—á–∏–∫:"
    
    try:
        raw = generate_with_llama(full_prompt)
        # –ï—Å–ª–∏ –æ—Ç–≤–µ—Ç –Ω–µ –Ω–∞ —Ä—É—Å—Å–∫–æ–º, –ø–æ–ø—Ä–æ–±—É–µ–º —Ñ–æ—Ä—Å–∏—Ä–æ–≤–∞—Ç—å –µ—â—ë —Ä–∞–∑
        if not _looks_russian(raw):
            forced_prompt = full_prompt + "\n\n–ù–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ: –æ—Ç–≤–µ—á–∞–π—Ç–µ –¢–û–õ–¨–ö–û –Ω–∞ —Ä—É—Å—Å–∫–æ–º —è–∑—ã–∫–µ."
            raw = generate_with_llama(forced_prompt)
        # –ü—Ä–∏–≤–µ–¥–µ–Ω–∏–µ –æ–±—Ä–∞—â–µ–Ω–∏—è –∫ —Ñ–æ—Ä–º–∞–ª—å–Ω–æ–º—É (–í—ã/–í–∞–º/–í–∞—Å/–í–∞—à)
        raw = enforce_formal_address(raw)
        return raw
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –æ–±—â–µ–≥–æ –æ—Ç–≤–µ—Ç–∞: {e}")
        # Fallback –æ—Ç–≤–µ—Ç—ã –¥–ª—è —Ç–∏–ø–∏—á–Ω—ã—Ö –≤–æ–ø—Ä–æ—Å–æ–≤
        fallback_responses = {
            "–ø—Ä–∏–≤–µ—Ç": "–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ! –Ø –∞–≤—Ç–æ–∞—Å—Å–∏—Å—Ç–µ–Ω—Ç –∫–æ–º–ø–∞–Ω–∏–∏ –ê–ê–ê –ú–û–¢–û–†–°. –ì–æ—Ç–æ–≤ –ø–æ–º–æ—á—å –í–∞–º —Å –ª—é–±—ã–º–∏ –≤–æ–ø—Ä–æ—Å–∞–º–∏ –ø–æ –∞–≤—Ç–æ–º–æ–±–∏–ª—è–º - –æ—Ç –≤—ã–±–æ—Ä–∞ –º–∞—à–∏–Ω—ã –¥–æ —Å–æ–≤–µ—Ç–æ–≤ –ø–æ –æ–±—Å–ª—É–∂–∏–≤–∞–Ω–∏—é. –ß—Ç–æ –í–∞—Å –∏–Ω—Ç–µ—Ä–µ—Å—É–µ—Ç?",
            "–∫—Ç–æ —Ç—ã": "–Ø –∞–≤—Ç–æ–∞—Å—Å–∏—Å—Ç–µ–Ω—Ç –∫–æ–º–ø–∞–Ω–∏–∏ –ê–ê–ê –ú–û–¢–û–†–° - —Å–ø–µ—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –ò–ò-–∞—Å—Å–∏—Å—Ç–µ–Ω—Ç –¥–ª—è –∞–≤—Ç–æ–º–æ–±–∏–ª—å–Ω–æ–π —Ç–µ–º–∞—Ç–∏–∫–∏. –ú–æ—è –≥–ª–∞–≤–Ω–∞—è –∑–∞–¥–∞—á–∞ - –ø–æ–º–æ–≥–∞—Ç—å –ª—é–¥—è–º —Å –≤–æ–ø—Ä–æ—Å–∞–º–∏, —Å–≤—è–∑–∞–Ω–Ω—ã–º–∏ —Å –∞–≤—Ç–æ–º–æ–±–∏–ª—è–º–∏. –Ø –º–æ–≥—É –ø–æ–º–æ—á—å –í–∞–º —Å –≤—ã–±–æ—Ä–æ–º –∞–≤—Ç–æ–º–æ–±–∏–ª—è, —Å—Ä–∞–≤–Ω–µ–Ω–∏–µ–º —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫, —Å–æ–≤–µ—Ç–∞–º–∏ –ø–æ –æ–±—Å–ª—É–∂–∏–≤–∞–Ω–∏—é, –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –æ —Ü–µ–Ω–∞—Ö –∏ –º–Ω–æ–≥–∏–º –¥—Ä—É–≥–∏–º. –ß–µ–º –º–æ–≥—É –ø–æ–º–æ—á—å?",
            "—á—Ç–æ —Ç—ã —É–º–µ–µ—à—å": "–ö–∞–∫ –∞–≤—Ç–æ–º–æ–±–∏–ª—å–Ω—ã–π –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç, —è —É–º–µ—é –º–Ω–æ–≥–æ–µ! –ú–æ–≥—É –ø–æ–º–æ—á—å –í–∞–º –Ω–∞–π—Ç–∏ –∏–¥–µ–∞–ª—å–Ω—ã–π –∞–≤—Ç–æ–º–æ–±–∏–ª—å –ø–æ–¥ –í–∞—à–∏ –ø–æ—Ç—Ä–µ–±–Ω–æ—Å—Ç–∏ –∏ –±—é–¥–∂–µ—Ç, —Å—Ä–∞–≤–Ω–∏—Ç—å —Ä–∞–∑–Ω—ã–µ –º–æ–¥–µ–ª–∏, –¥–∞—Ç—å —Å–æ–≤–µ—Ç—ã –ø–æ –æ–±—Å–ª—É–∂–∏–≤–∞–Ω–∏—é –∏ —Ä–µ–º–æ–Ω—Ç—É, –ø–æ–¥—Å–∫–∞–∑–∞—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ü–µ–Ω–∞—Ö –∏ —Ä—ã–Ω–∫–µ, –ø–æ–º–æ—á—å —Å –¥–æ–∫—É–º–µ–Ω—Ç–∞–º–∏ –∏ —Å—Ç—Ä–∞—Ö–æ–≤–∫–æ–π. –¢–∞–∫–∂–µ –º–æ–≥—É –æ—Ç–≤–µ—Ç–∏—Ç—å –Ω–∞ –æ–±—â–∏–µ –≤–æ–ø—Ä–æ—Å—ã –∏ –ø—Ä–æ—Å—Ç–æ –ø–æ–¥–¥–µ—Ä–∂–∞—Ç—å –±–µ—Å–µ–¥—É. –ü—Ä–æ—Å—Ç–æ —Å–∫–∞–∂–∏—Ç–µ, —á—Ç–æ –í–∞—Å –∏–Ω—Ç–µ—Ä–µ—Å—É–µ—Ç!",
            "–∫–∞–∫ –¥–µ–ª–∞": "–°–ø–∞—Å–∏–±–æ, —É –º–µ–Ω—è –≤—Å–µ –æ—Ç–ª–∏—á–Ω–æ! –ì–æ—Ç–æ–≤ –ø–æ–º–æ–≥–∞—Ç—å —Å –∞–≤—Ç–æ–º–æ–±–∏–ª—å–Ω—ã–º–∏ –≤–æ–ø—Ä–æ—Å–∞–º–∏. –ê —É –í–∞—Å –∫–∞–∫ –¥–µ–ª–∞? –ï—Å—Ç—å –ª–∏ –∫–∞–∫–∏–µ-—Ç–æ –≤–æ–ø—Ä–æ—Å—ã –ø–æ –∞–≤—Ç–æ–º–æ–±–∏–ª—è–º, —Å –∫–æ—Ç–æ—Ä—ã–º–∏ –º–æ–≥—É –ø–æ–º–æ—á—å?"
        }
        
        query_lower = user_query.lower().strip()
        for key, response in fallback_responses.items():
            if key in query_lower:
                return response
        
        return "–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ! –Ø –∞–≤—Ç–æ–∞—Å—Å–∏—Å—Ç–µ–Ω—Ç –∫–æ–º–ø–∞–Ω–∏–∏ –ê–ê–ê –ú–û–¢–û–†–°. –ì–æ—Ç–æ–≤ –ø–æ–º–æ—á—å –í–∞–º —Å –ª—é–±—ã–º–∏ –≤–æ–ø—Ä–æ—Å–∞–º–∏ –ø–æ –∞–≤—Ç–æ–º–æ–±–∏–ª—è–º. –ß—Ç–æ –í–∞—Å –∏–Ω—Ç–µ—Ä–µ—Å—É–µ—Ç?" 

def enforce_formal_address(text: str) -> str:
    """–ó–∞–º–µ–Ω—è–µ—Ç –æ–±—Ä–∞—â–µ–Ω–∏—è –Ω–∞ '—Ç—ã' –Ω–∞ —Ñ–æ—Ä–º—ã '–í—ã/–í–∞—Å/–í–∞–º/–í–∞—à' —Å –ø—Ä–æ–ø–∏—Å–Ω–æ–π."""
    import re
    replacements = [
        (r"\b—Ç—ã\b", "–í—ã"),
        (r"\b—Ç–µ–±—è\b", "–í–∞—Å"),
        (r"\b—Ç–µ–±–µ\b", "–í–∞–º"),
        (r"\b—Ç–æ–±–æ–π\b", "–í–∞–º–∏"),
        (r"\b—Å —Ç–æ–±–æ–π\b", "—Å –í–∞–º–∏"),
        (r"\b–¥–ª—è —Ç–µ–±—è\b", "–¥–ª—è –í–∞—Å"),
        (r"\b—Ç–≤–æ–π\b", "–í–∞—à"),
        (r"\b—Ç–≤–æ—è\b", "–í–∞—à–∞"),
        (r"\b—Ç–≤–æ–µ\b", "–í–∞—à–µ"),
        (r"\b—Ç–≤–æ—ë\b", "–í–∞—à–µ"),
        (r"\b—Ç–≤–æ–∏\b", "–í–∞—à–∏"),
    ]
    result = text
    for pattern, repl in replacements:
        result = re.sub(pattern, repl, result, flags=re.IGNORECASE)
    return result

def _looks_russian(text: str) -> bool:
    """–ì—Ä—É–±–∞—è —ç–≤—Ä–∏—Å—Ç–∏–∫–∞: –≤ –æ—Ç–≤–µ—Ç–µ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –∫–∏—Ä–∏–ª–ª–∏—Ü—ã."""
    import re
    cyr = len(re.findall(r"[–ê-–Ø–∞-—è–Å—ë]", text or ""))
    lat = len(re.findall(r"[A-Za-z]", text or ""))
    return cyr >= max(10, lat)